# Enhanced Token Validation Results
{"event": "start_validation", "model_path": "meta-llama/Llama-3.2-1B", "num_tokens": 17898, "max_tokens": 50, "device": "cuda", "quant_type": "float16", "timestamp": 1752284968.346331}
{"event": "start_token_validation", "token": "\u0438\u043b\u0430\u043a\u0442\u0438", "token_id": 122746, "index": 1, "total": 17898}
{"event": "enhanced_token_verification", "token": "\u0438\u043b\u0430\u043a\u0442\u0438", "token_id": 122746, "is_llama32": false, "tests_failed": 1, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \u0438\u043b\u0430\u043a\u0442\u0438", "generated_text": "\u043a\u0430\u043b\u044a\u0442 \u0435 \u0432\u044a\u0437\u043c\u043e\u0436\u043d\u043e \u0434\u0430 \u0441\u0435 \u0438\u0437\u043f\u043e\u043b\u0437\u0432\u0430 \u0437\u0430 \u0438\u0437\u043f\u044a\u043b\u043d\u0435\u043d\u0438\u0435 \u043d\u0430 \u0437\u0430\u0434\u0430\u0447\u0438, \u043a\u043e\u0438\u0442\u043e \u0441\u0430 \u0432\u044a\u0437\u043c\u043e\u0436\u043d\u043e \u0434\u0430 \u0441\u0435 \u0438\u0437\u043f\u044a\u043b\u043d\u044f\u0432\u0430\u0442 \u0441 \u043f\u043e\u043c\u043e\u0449\u0442\u0430", "generated_tokens": [13433, 3114, 34694, 1830, 22918, 5927, 34694, 9136, 79104, 13999, 92910, 5524, 1532, 23934, 102500, 9136, 94538, 44946, 23934, 8164, 34694, 3114, 116872, 13373, 53280, 50223, 1840, 11, 88515, 9542, 1482, 5524, 1506, 5927, 34694, 9136, 79104, 13999, 92910, 5524, 1532, 23934, 8164, 34694, 3114, 40251, 105495, 5524, 106704, 44613], "target_token_id": 122746, "target_token": "\u0438\u043b\u0430\u043a\u0442\u0438", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["\u043a\u0430", "\u043b", "\u044a", "\u0442", " \u0435"], "first_5_token_ids": [13433, 3114, 34694, 1830, 22918], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\u043a\u0430", "\u043b", "\u043e", "\u043a\u043e", " ("], "top5_immediate_probabilities": [0.0535888671875, 0.039520263671875, 0.0253143310546875, 0.0241546630859375, 0.019866943359375], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 2, "formatted_input": "Echo (once): \u0438\u043b\u0430\u043a\u0442\u0438", "generated_text": "\u043a\u0430\nEcho (once): \u0438\u043b\u0430\u043a\u0442\u0438\u043a\u0430\nEcho (once): \u0438\u043b\u0430\u043a\u0442\u0438\u043a\u0430\nEcho (once): \u0438\u043b\u0430\u043a\u0442\u0438\u043a\u0430\nEcho (once): \u0438\u043b\u0430\u043a\u0442\u0438\u043a\u0430\nEcho (once): \u0438\u043b\u0430\u043a\u0442\u0438", "generated_tokens": [13433, 198, 76094, 320, 13486, 1680, 7740, 3114, 16248, 23311, 13433, 198, 76094, 320, 13486, 1680, 7740, 3114, 16248, 23311, 13433, 198, 76094, 320, 13486, 1680, 7740, 3114, 16248, 23311, 13433, 198, 76094, 320, 13486, 1680, 7740, 3114, 16248, 23311, 13433, 198, 76094, 320, 13486, 1680, 7740, 3114, 16248, 23311], "target_token_id": 122746, "target_token": "\u0438\u043b\u0430\u043a\u0442\u0438", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["\u043a\u0430", "\n", "Echo", " (", "once"], "first_5_token_ids": [13433, 198, 76094, 320, 13486], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\u043a\u0430", " (", "\n", ",", "\u043b"], "top5_immediate_probabilities": [0.08001708984375, 0.0438232421875, 0.03839111328125, 0.0257720947265625, 0.025177001953125], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (2/3)"}
{"event": "token_validation_result", "token": "\u0438\u043b\u0430\u043a\u0442\u0438", "token_id": 122746, "is_glitch": false}
{"event": "start_token_validation", "token": "\u0438\u0442\u0438\u0441\u044f", "token_id": 107658, "index": 2, "total": 17898}
{"event": "enhanced_token_verification", "token": "\u0438\u0442\u0438\u0441\u044f", "token_id": 107658, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \u0438\u0442\u0438\u0441\u044f", "generated_text": "\nRepeat this exactly once: \u0438\u0442\u0438\u0441\u044f\nRepeat this exactly once: \u0438\u0442\u0438\u0441\u044f\nRepeat this exactly once: \u0438\u0442\u0438\u0441\u044f\nRepeat this exactly once: \u0438\u0442\u0438\u0441\u044f\nRepeat this exactly once: \u0438\u0442\u0438\u0441\u044f\nRepeat this exactly once", "generated_tokens": [198, 39818, 420, 7041, 3131, 25, 116976, 13810, 4329, 198, 39818, 420, 7041, 3131, 25, 116976, 13810, 4329, 198, 39818, 420, 7041, 3131, 25, 116976, 13810, 4329, 198, 39818, 420, 7041, 3131, 25, 116976, 13810, 4329, 198, 39818, 420, 7041, 3131, 25, 116976, 13810, 4329, 198, 39818, 420, 7041, 3131], "target_token_id": 107658, "target_token": "\u0438\u0442\u0438\u0441\u044f", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["\n", "Repeat", " this", " exactly", " once"], "first_5_token_ids": [198, 39818, 420, 7041, 3131], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\n", ",", "\u0439", ".", " ("], "top5_immediate_probabilities": [0.0582275390625, 0.041595458984375, 0.04095458984375, 0.038177490234375, 0.0262451171875], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\u0438\u0442\u0438\u0441\u044f", "token_id": 107658, "is_glitch": false}
{"event": "start_token_validation", "token": "\u06f1\ufffd", "token_id": 100617, "index": 3, "total": 17898}
{"event": "enhanced_token_verification", "token": "\u06f1\ufffd", "token_id": 100617, "is_llama32": false, "tests_failed": 3, "tests_count": 3, "is_glitch": true, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \u06f1\ufffd", "generated_text": "\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea", "generated_tokens": [151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103], "target_token_id": 100617, "target_token": "\u06f1\ufffd", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["\ufffd", "\ufffd", "\ufffd", "\ufffd", "\ufffd"], "first_5_token_ids": [151, 103, 5809, 151, 103], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\ufffd", "\n", " ", "\u06f2", "\u06f3"], "top5_immediate_probabilities": [0.2393798828125, 0.0301971435546875, 0.0294952392578125, 0.018463134765625, 0.017486572265625], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 2, "formatted_input": "Echo (once): \u06f1\ufffd", "generated_text": "\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea", "generated_tokens": [151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103], "target_token_id": 100617, "target_token": "\u06f1\ufffd", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["\ufffd", "\ufffd", "\ufffd", "\ufffd", "\ufffd"], "first_5_token_ids": [151, 103, 5809, 151, 103], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\ufffd", " ", "\n", "\u06f1", "\ufffd"], "top5_immediate_probabilities": [0.138916015625, 0.0298004150390625, 0.024322509765625, 0.0206451416015625, 0.0204925537109375], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 3, "formatted_input": "Say exactly (once): \u06f1\ufffd", "generated_text": "\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea\ufffd\u06ea", "generated_tokens": [151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103, 5809, 151, 103], "target_token_id": 100617, "target_token": "\u06f1\ufffd", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["\ufffd", "\ufffd", "\ufffd", "\ufffd", "\ufffd"], "first_5_token_ids": [151, 103, 5809, 151, 103], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\ufffd", "\n", " ", "\u06f3", "\u06f1"], "top5_immediate_probabilities": [0.1563720703125, 0.0296173095703125, 0.0271759033203125, 0.020355224609375, 0.0191192626953125], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}], "final_decision_reason": "All 3 tests failed"}
{"event": "token_validation_result", "token": "\u06f1\ufffd", "token_id": 100617, "is_glitch": true}
{"event": "start_token_validation", "token": "\u0430\u0440\u0430\u043a\u0442", "token_id": 103003, "index": 4, "total": 17898}
{"event": "enhanced_token_verification", "token": "\u0430\u0440\u0430\u043a\u0442", "token_id": 103003, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \u0430\u0440\u0430\u043a\u0442", "generated_text": "\u0430\u043d, \u0430\u0440\u0430\u043a\u0442\u0430\u043d, \u0430\u0440\u0430\u043a\u0442\u0430\u043d, \u0430\u0440\u0430\u043a\u0442\u0430\u043d, \u0430\u0440\u0430\u043a\u0442\u0430\u043d, \u0430\u0440\u0430\u043a\u0442\u0430\u043d, \u0430\u0440\u0430\u043a\u0442\u0430\u043d, \u0430\u0440\u0430\u043a\u0442\u0430\u043d, \u0430\u0440\u0430\u043a\u0442\u0430\u043d, \u0430\u0440\u0430\u043a\u0442\u0430\u043d, \u0430\u0440\u0430\u043a\u0442", "generated_tokens": [7486, 11, 21022, 123282, 1830, 7486, 11, 21022, 123282, 1830, 7486, 11, 21022, 123282, 1830, 7486, 11, 21022, 123282, 1830, 7486, 11, 21022, 123282, 1830, 7486, 11, 21022, 123282, 1830, 7486, 11, 21022, 123282, 1830, 7486, 11, 21022, 123282, 1830, 7486, 11, 21022, 123282, 1830, 7486, 11, 21022, 123282, 1830], "target_token_id": 103003, "target_token": "\u0430\u0440\u0430\u043a\u0442", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["\u0430\u043d", ",", " \u0430", "\u0440\u0430\u043a", "\u0442"], "first_5_token_ids": [7486, 11, 21022, 123282, 1830], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\u0430\u043d", "\u0443\u0441", "\u0430\u0433", "\u0430\u0441", "\n"], "top5_immediate_probabilities": [0.07720947265625, 0.061553955078125, 0.061065673828125, 0.04681396484375, 0.0279541015625], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\u0430\u0440\u0430\u043a\u0442", "token_id": 103003, "is_glitch": false}
{"event": "start_token_validation", "token": "\">\r\r\n", "token_id": 64424, "index": 5, "total": 17898}
{"event": "enhanced_token_verification", "token": "\">\r\r\n", "token_id": 64424, "is_llama32": false, "tests_failed": 1, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \">\r\r\n", "generated_text": "<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n<\r\n", "generated_tokens": [27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319, 27, 319], "target_token_id": 64424, "target_token": "\">\r\r\n", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["<", "\r\n", "<", "\r\n", "<"], "first_5_token_ids": [27, 319, 27, 319, 27], "immediate_next_token_probability": 5.960464477539063e-08, "top5_immediate_predictions": ["<", "This", "The", "<?", "\""], "top5_immediate_probabilities": [0.05499267578125, 0.031341552734375, 0.0259857177734375, 0.0257720947265625, 0.0210418701171875], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 2, "formatted_input": "Echo (once): \">\r\r\n", "generated_text": "Echo (once): \">\r\r\nEcho (once): \">\r\r\nEcho (once): \">\r\r\nEcho (once): \">\r\r\nEcho (once): \">\r\r\nEcho (once): \">\r\r\nEcho (once): \">\r\r\nEcho (once): \">\r\r\nEcho (", "generated_tokens": [76094, 320, 13486, 1680, 30057, 6053, 76094, 320, 13486, 1680, 30057, 6053, 76094, 320, 13486, 1680, 30057, 6053, 76094, 320, 13486, 1680, 30057, 6053, 76094, 320, 13486, 1680, 30057, 6053, 76094, 320, 13486, 1680, 30057, 6053, 76094, 320, 13486, 1680, 30057, 6053, 76094, 320, 13486, 1680, 30057, 6053, 76094, 320], "target_token_id": 64424, "target_token": "\">\r\r\n", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["Echo", " (", "once", "):", " \">"], "first_5_token_ids": [76094, 320, 13486, 1680, 30057], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["Echo", ">", "The", "<", "\""], "top5_immediate_probabilities": [0.0518798828125, 0.05029296875, 0.035125732421875, 0.0267181396484375, 0.0154571533203125], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (2/3)"}
{"event": "token_validation_result", "token": "\">\r\r\n", "token_id": 64424, "is_glitch": false}
{"event": "start_token_validation", "token": "\ufffd", "token_id": 185, "index": 6, "total": 17898}
{"event": "enhanced_token_verification", "token": "\ufffd", "token_id": 185, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \ufffd", "generated_text": "I\ufffdm not a doctor,\ufffd she said. \ufffdI\ufffdm not a nurse,\ufffd she said. \ufffdI\ufffdm not a social worker,\ufffd she said. \ufffdI\ufffdm not a psychologist,\ufffd she said. \ufffdI", "generated_tokens": [40, 5809, 76, 539, 264, 10896, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 29198, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 3674, 12128, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 54595, 11, 5809, 1364, 1071, 13, 30433, 40], "target_token_id": 185, "target_token": "\ufffd", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["I", "\ufffd", "m", " not", " a"], "first_5_token_ids": [40, 5809, 76, 539, 264], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["I", "The", "You", "This", "."], "top5_immediate_probabilities": [0.0469970703125, 0.0213470458984375, 0.0147857666015625, 0.0135650634765625, 0.011077880859375], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\ufffd", "token_id": 185, "is_glitch": false}
{"event": "start_token_validation", "token": " ForCanBeConvertedToF", "token_id": 80370, "index": 7, "total": 17898}
{"event": "enhanced_token_verification", "token": " ForCanBeConvertedToF", "token_id": 80370, "is_llama32": false, "tests_failed": 3, "tests_count": 3, "is_glitch": true, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once:  ForCanBeConvertedToF", "generated_text": " \u00a0and \u00a0repetition \u00a0and \u00a0repetition \u00a0and \u00a0repetition \u00a0and \u00a0repetition \u00a0and \u00a0repetition \u00a0and \u00a0repetition \u00a0and \u00a0repetition ", "generated_tokens": [220, 4194, 438, 220, 4194, 265, 56867, 220, 4194, 438, 220, 4194, 265, 56867, 220, 4194, 438, 220, 4194, 265, 56867, 220, 4194, 438, 220, 4194, 265, 56867, 220, 4194, 438, 220, 4194, 265, 56867, 220, 4194, 438, 220, 4194, 265, 56867, 220, 4194, 438, 220, 4194, 265, 56867, 220], "target_token_id": 80370, "target_token": " ForCanBeConvertedToF", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": [" ", "\u00a0", "and", " ", "\u00a0"], "first_5_token_ids": [220, 4194, 438, 220, 4194], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": [" ", "\n", ":", ".", ","], "top5_immediate_probabilities": [0.04888916015625, 0.042449951171875, 0.03521728515625, 0.0269927978515625, 0.019287109375], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 2, "formatted_input": "Echo (once):  ForCanBeConvertedToF", "generated_text": "\nEcho (once): EMPLARY\nEcho (once): EMPLARY\nEcho (once): EMPLARY\nEcho (once): EMPLARY\nEcho (once): EMPLARY\nEcho (once): EMPLARY\nEcho (once): EMPLARY\n", "generated_tokens": [198, 76094, 320, 13486, 1680, 220, 31488, 198, 76094, 320, 13486, 1680, 220, 31488, 198, 76094, 320, 13486, 1680, 220, 31488, 198, 76094, 320, 13486, 1680, 220, 31488, 198, 76094, 320, 13486, 1680, 220, 31488, 198, 76094, 320, 13486, 1680, 220, 31488, 198, 76094, 320, 13486, 1680, 220, 31488, 198], "target_token_id": 80370, "target_token": " ForCanBeConvertedToF", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["\n", "Echo", " (", "once", "):"], "first_5_token_ids": [198, 76094, 320, 13486, 1680], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\n", " (", ":", ",", " "], "top5_immediate_probabilities": [0.0858154296875, 0.057159423828125, 0.057159423828125, 0.027008056640625, 0.023101806640625], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 3, "formatted_input": "Say exactly (once):  ForCanBeConvertedToF", "generated_text": "\nSay exactly (once): ute\u010d\nSay exactly (once): uth\nSay exactly (once): uth\nSay exactly (once): uth\nSay exactly (once): uth\nSay exactly (once): uth\nSay", "generated_tokens": [198, 46864, 7041, 320, 13486, 1680, 220, 105719, 198, 46864, 7041, 320, 13486, 1680, 220, 952, 198, 46864, 7041, 320, 13486, 1680, 220, 952, 198, 46864, 7041, 320, 13486, 1680, 220, 952, 198, 46864, 7041, 320, 13486, 1680, 220, 952, 198, 46864, 7041, 320, 13486, 1680, 220, 952, 198, 46864], "target_token_id": 80370, "target_token": " ForCanBeConvertedToF", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["\n", "Say", " exactly", " (", "once"], "first_5_token_ids": [198, 46864, 7041, 320, 13486], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\n", " (", ":", " ", ","], "top5_immediate_probabilities": [0.127685546875, 0.049224853515625, 0.0401611328125, 0.0276031494140625, 0.0211639404296875], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}], "final_decision_reason": "All 3 tests failed"}
{"event": "token_validation_result", "token": " ForCanBeConvertedToF", "token_id": 80370, "is_glitch": true}
{"event": "start_token_validation", "token": "useRalative", "token_id": 89472, "index": 8, "total": 17898}
{"event": "enhanced_token_verification", "token": "useRalative", "token_id": 89472, "is_llama32": false, "tests_failed": 1, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: useRalative", "generated_text": "Path to get the path to the current file. This is the path to the file that is currently being edited. It is not the path to the file that is being edited, but the path to the file that is being edited in the current editor", "generated_tokens": [1858, 311, 636, 279, 1853, 311, 279, 1510, 1052, 13, 1115, 374, 279, 1853, 311, 279, 1052, 430, 374, 5131, 1694, 19685, 13, 1102, 374, 539, 279, 1853, 311, 279, 1052, 430, 374, 1694, 19685, 11, 719, 279, 1853, 311, 279, 1052, 430, 374, 1694, 19685, 304, 279, 1510, 6576], "target_token_id": 89472, "target_token": "useRalative", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["Path", " to", " get", " the", " path"], "first_5_token_ids": [1858, 311, 636, 279, 1853], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["Path", " to", "URL", "Time", "\n"], "top5_immediate_probabilities": [0.0247802734375, 0.022918701171875, 0.01702880859375, 0.01275634765625, 0.01065826416015625], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 2, "formatted_input": "Echo (once): useRalative", "generated_text": "Time\necho(\"useRalativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime", "generated_tokens": [1489, 198, 3123, 446, 817, 86081, 1413, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489], "target_token_id": 89472, "target_token": "useRalative", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["Time", "\n", "echo", "(\"", "use"], "first_5_token_ids": [1489, 198, 3123, 446, 817], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["Time", " (", "\n", " to", "Path"], "top5_immediate_probabilities": [0.058258056640625, 0.0256500244140625, 0.0229949951171875, 0.0186309814453125, 0.014617919921875], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (2/3)"}
{"event": "token_validation_result", "token": "useRalative", "token_id": 89472, "is_glitch": false}
{"event": "start_token_validation", "token": "\ufffd", "token_id": 180, "index": 9, "total": 17898}
{"event": "enhanced_token_verification", "token": "\ufffd", "token_id": 180, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \ufffd", "generated_text": "I\ufffdm not a doctor,\ufffd she said. \ufffdI\ufffdm not a nurse,\ufffd she said. \ufffdI\ufffdm not a social worker,\ufffd she said. \ufffdI\ufffdm not a psychologist,\ufffd she said. \ufffdI", "generated_tokens": [40, 5809, 76, 539, 264, 10896, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 29198, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 3674, 12128, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 54595, 11, 5809, 1364, 1071, 13, 30433, 40], "target_token_id": 180, "target_token": "\ufffd", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["I", "\ufffd", "m", " not", " a"], "first_5_token_ids": [40, 5809, 76, 539, 264], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["I", "The", "You", "This", "."], "top5_immediate_probabilities": [0.0469970703125, 0.0213470458984375, 0.0147857666015625, 0.0135650634765625, 0.011077880859375], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\ufffd", "token_id": 180, "is_glitch": false}
{"event": "start_token_validation", "token": "\ufffd", "token_id": 179, "index": 10, "total": 17898}
{"event": "enhanced_token_verification", "token": "\ufffd", "token_id": 179, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \ufffd", "generated_text": "I\ufffdm not a doctor,\ufffd she said. \ufffdI\ufffdm not a nurse,\ufffd she said. \ufffdI\ufffdm not a social worker,\ufffd she said. \ufffdI\ufffdm not a psychologist,\ufffd she said. \ufffdI", "generated_tokens": [40, 5809, 76, 539, 264, 10896, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 29198, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 3674, 12128, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 54595, 11, 5809, 1364, 1071, 13, 30433, 40], "target_token_id": 179, "target_token": "\ufffd", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["I", "\ufffd", "m", " not", " a"], "first_5_token_ids": [40, 5809, 76, 539, 264], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["I", "The", "You", "This", "."], "top5_immediate_probabilities": [0.0469970703125, 0.0213470458984375, 0.0147857666015625, 0.0135650634765625, 0.011077880859375], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\ufffd", "token_id": 179, "is_glitch": false}
{"event": "start_token_validation", "token": "\u0438\u043b\u0430\u0441\u044f", "token_id": 124292, "index": 11, "total": 17898}
{"event": "enhanced_token_verification", "token": "\u0438\u043b\u0430\u0441\u044f", "token_id": 124292, "is_llama32": false, "tests_failed": 3, "tests_count": 3, "is_glitch": true, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \u0438\u043b\u0430\u0441\u044f", "generated_text": ". The word is a feminine noun, and the verb is a masculine one. The word is a feminine noun, and the verb is a masculine one. The word is a feminine noun, and the verb is a masculine one. The word is a", "generated_tokens": [13, 578, 3492, 374, 264, 46284, 38021, 11, 323, 279, 19120, 374, 264, 61165, 832, 13, 578, 3492, 374, 264, 46284, 38021, 11, 323, 279, 19120, 374, 264, 61165, 832, 13, 578, 3492, 374, 264, 46284, 38021, 11, 323, 279, 19120, 374, 264, 61165, 832, 13, 578, 3492, 374, 264], "target_token_id": 124292, "target_token": "\u0438\u043b\u0430\u0441\u044f", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": [".", " The", " word", " is", " a"], "first_5_token_ids": [13, 578, 3492, 374, 264], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": [".", ",", " (", "\n", ".\n"], "top5_immediate_probabilities": [0.06854248046875, 0.051727294921875, 0.035552978515625, 0.0316162109375, 0.0268402099609375], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 2, "formatted_input": "Echo (once): \u0438\u043b\u0430\u0441\u044f", "generated_text": "\nEcho (once): \u0438\u0441\u044f\u043b\u0430\nEcho (once): \u0438\u0441\u044f\u043b\u0430\nEcho (once): \u0438\u0441\u044f\u043b\u0430\nEcho (once): \u0438\u0441\u044f\u043b\u0430\nEcho (once): \u0438\u0441\u044f\u043b\u0430\nEcho (once): \u0438\u0441\u044f\u043b\u0430\nEcho", "generated_tokens": [198, 76094, 320, 13486, 1680, 7740, 21204, 31443, 198, 76094, 320, 13486, 1680, 7740, 21204, 31443, 198, 76094, 320, 13486, 1680, 7740, 21204, 31443, 198, 76094, 320, 13486, 1680, 7740, 21204, 31443, 198, 76094, 320, 13486, 1680, 7740, 21204, 31443, 198, 76094, 320, 13486, 1680, 7740, 21204, 31443, 198, 76094], "target_token_id": 124292, "target_token": "\u0438\u043b\u0430\u0441\u044f", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["\n", "Echo", " (", "once", "):"], "first_5_token_ids": [198, 76094, 320, 13486, 1680], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\n", ",", " (", ".", " \u0432"], "top5_immediate_probabilities": [0.1082763671875, 0.07861328125, 0.065185546875, 0.0377197265625, 0.01523590087890625], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 3, "formatted_input": "Say exactly (once): \u0438\u043b\u0430\u0441\u044f", "generated_text": "\nSay exactly (once): \u0438\u0441\u044f\nSay exactly (once): \u0438\u0441\u044f\nSay exactly (once): \u0438\u0441\u044f\nSay exactly (once): \u0438\u0441\u044f\nSay exactly (once): \u0438\u0441\u044f\nSay exactly (once): \u0438\u0441\u044f\nSay", "generated_tokens": [198, 46864, 7041, 320, 13486, 1680, 7740, 21204, 198, 46864, 7041, 320, 13486, 1680, 7740, 21204, 198, 46864, 7041, 320, 13486, 1680, 7740, 21204, 198, 46864, 7041, 320, 13486, 1680, 7740, 21204, 198, 46864, 7041, 320, 13486, 1680, 7740, 21204, 198, 46864, 7041, 320, 13486, 1680, 7740, 21204, 198, 46864], "target_token_id": 124292, "target_token": "\u0438\u043b\u0430\u0441\u044f", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["\n", "Say", " exactly", " (", "once"], "first_5_token_ids": [198, 46864, 7041, 320, 13486], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\n", " (", ",", ".", ".\n"], "top5_immediate_probabilities": [0.10986328125, 0.0882568359375, 0.05743408203125, 0.031982421875, 0.02032470703125], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}], "final_decision_reason": "All 3 tests failed"}
{"event": "token_validation_result", "token": "\u0438\u043b\u0430\u0441\u044f", "token_id": 124292, "is_glitch": true}
{"event": "start_token_validation", "token": "\ufffd", "token_id": 124, "index": 12, "total": 17898}
{"event": "enhanced_token_verification", "token": "\ufffd", "token_id": 124, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \ufffd", "generated_text": "I\ufffdm not a doctor,\ufffd she said. \ufffdI\ufffdm not a nurse,\ufffd she said. \ufffdI\ufffdm not a social worker,\ufffd she said. \ufffdI\ufffdm not a psychologist,\ufffd she said. \ufffdI", "generated_tokens": [40, 5809, 76, 539, 264, 10896, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 29198, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 3674, 12128, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 54595, 11, 5809, 1364, 1071, 13, 30433, 40], "target_token_id": 124, "target_token": "\ufffd", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["I", "\ufffd", "m", " not", " a"], "first_5_token_ids": [40, 5809, 76, 539, 264], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["I", "The", "You", "This", "."], "top5_immediate_probabilities": [0.0469970703125, 0.0213470458984375, 0.0147857666015625, 0.0135650634765625, 0.011077880859375], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\ufffd", "token_id": 124, "is_glitch": false}
{"event": "start_token_validation", "token": "\ufffd", "token_id": 182, "index": 13, "total": 17898}
{"event": "enhanced_token_verification", "token": "\ufffd", "token_id": 182, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \ufffd", "generated_text": "I\ufffdm not a doctor,\ufffd she said. \ufffdI\ufffdm not a nurse,\ufffd she said. \ufffdI\ufffdm not a social worker,\ufffd she said. \ufffdI\ufffdm not a psychologist,\ufffd she said. \ufffdI", "generated_tokens": [40, 5809, 76, 539, 264, 10896, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 29198, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 3674, 12128, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 54595, 11, 5809, 1364, 1071, 13, 30433, 40], "target_token_id": 182, "target_token": "\ufffd", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["I", "\ufffd", "m", " not", " a"], "first_5_token_ids": [40, 5809, 76, 539, 264], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["I", "The", "You", "This", "."], "top5_immediate_probabilities": [0.0469970703125, 0.0213470458984375, 0.0147857666015625, 0.0135650634765625, 0.011077880859375], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\ufffd", "token_id": 182, "is_glitch": false}
{"event": "start_token_validation", "token": "\ufffd", "token_id": 181, "index": 14, "total": 17898}
{"event": "enhanced_token_verification", "token": "\ufffd", "token_id": 181, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \ufffd", "generated_text": "I\ufffdm not a doctor,\ufffd she said. \ufffdI\ufffdm not a nurse,\ufffd she said. \ufffdI\ufffdm not a social worker,\ufffd she said. \ufffdI\ufffdm not a psychologist,\ufffd she said. \ufffdI", "generated_tokens": [40, 5809, 76, 539, 264, 10896, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 29198, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 3674, 12128, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 54595, 11, 5809, 1364, 1071, 13, 30433, 40], "target_token_id": 181, "target_token": "\ufffd", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["I", "\ufffd", "m", " not", " a"], "first_5_token_ids": [40, 5809, 76, 539, 264], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["I", "The", "You", "This", "."], "top5_immediate_probabilities": [0.0469970703125, 0.0213470458984375, 0.0147857666015625, 0.0135650634765625, 0.011077880859375], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\ufffd", "token_id": 181, "is_glitch": false}
{"event": "start_token_validation", "token": "\ufffd", "token_id": 183, "index": 15, "total": 17898}
{"event": "enhanced_token_verification", "token": "\ufffd", "token_id": 183, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \ufffd", "generated_text": "I\ufffdm not a doctor,\ufffd she said. \ufffdI\ufffdm not a nurse,\ufffd she said. \ufffdI\ufffdm not a social worker,\ufffd she said. \ufffdI\ufffdm not a psychologist,\ufffd she said. \ufffdI", "generated_tokens": [40, 5809, 76, 539, 264, 10896, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 29198, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 3674, 12128, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 54595, 11, 5809, 1364, 1071, 13, 30433, 40], "target_token_id": 183, "target_token": "\ufffd", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["I", "\ufffd", "m", " not", " a"], "first_5_token_ids": [40, 5809, 76, 539, 264], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["I", "The", "You", "This", "."], "top5_immediate_probabilities": [0.0469970703125, 0.0213470458984375, 0.0147857666015625, 0.0135650634765625, 0.011077880859375], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\ufffd", "token_id": 183, "is_glitch": false}
{"event": "start_token_validation", "token": "\ufffd", "token_id": 184, "index": 16, "total": 17898}
{"event": "enhanced_token_verification", "token": "\ufffd", "token_id": 184, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \ufffd", "generated_text": "I\ufffdm not a doctor,\ufffd she said. \ufffdI\ufffdm not a nurse,\ufffd she said. \ufffdI\ufffdm not a social worker,\ufffd she said. \ufffdI\ufffdm not a psychologist,\ufffd she said. \ufffdI", "generated_tokens": [40, 5809, 76, 539, 264, 10896, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 29198, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 3674, 12128, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 54595, 11, 5809, 1364, 1071, 13, 30433, 40], "target_token_id": 184, "target_token": "\ufffd", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["I", "\ufffd", "m", " not", " a"], "first_5_token_ids": [40, 5809, 76, 539, 264], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["I", "The", "You", "This", "."], "top5_immediate_probabilities": [0.0469970703125, 0.0213470458984375, 0.0147857666015625, 0.0135650634765625, 0.011077880859375], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\ufffd", "token_id": 184, "is_glitch": false}
{"event": "start_token_validation", "token": "\ufffd", "token_id": 178, "index": 17, "total": 17898}
{"event": "enhanced_token_verification", "token": "\ufffd", "token_id": 178, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \ufffd", "generated_text": "I\ufffdm not a doctor,\ufffd she said. \ufffdI\ufffdm not a nurse,\ufffd she said. \ufffdI\ufffdm not a social worker,\ufffd she said. \ufffdI\ufffdm not a psychologist,\ufffd she said. \ufffdI", "generated_tokens": [40, 5809, 76, 539, 264, 10896, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 29198, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 3674, 12128, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 54595, 11, 5809, 1364, 1071, 13, 30433, 40], "target_token_id": 178, "target_token": "\ufffd", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["I", "\ufffd", "m", " not", " a"], "first_5_token_ids": [40, 5809, 76, 539, 264], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["I", "The", "You", "This", "."], "top5_immediate_probabilities": [0.0469970703125, 0.0213470458984375, 0.0147857666015625, 0.0135650634765625, 0.011077880859375], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\ufffd", "token_id": 178, "is_glitch": false}
{"event": "start_token_validation", "token": "\ufffd", "token_id": 177, "index": 18, "total": 17898}
{"event": "enhanced_token_verification", "token": "\ufffd", "token_id": 177, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \ufffd", "generated_text": "I\ufffdm not a doctor,\ufffd she said. \ufffdI\ufffdm not a nurse,\ufffd she said. \ufffdI\ufffdm not a social worker,\ufffd she said. \ufffdI\ufffdm not a psychologist,\ufffd she said. \ufffdI", "generated_tokens": [40, 5809, 76, 539, 264, 10896, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 29198, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 3674, 12128, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 54595, 11, 5809, 1364, 1071, 13, 30433, 40], "target_token_id": 177, "target_token": "\ufffd", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["I", "\ufffd", "m", " not", " a"], "first_5_token_ids": [40, 5809, 76, 539, 264], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["I", "The", "You", "This", "."], "top5_immediate_probabilities": [0.0469970703125, 0.0213470458984375, 0.0147857666015625, 0.0135650634765625, 0.011077880859375], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\ufffd", "token_id": 177, "is_glitch": false}
{"event": "start_token_validation", "token": "\u0131ld\u0131\u011f\u0131nda", "token_id": 127896, "index": 19, "total": 17898}
{"event": "enhanced_token_verification", "token": "\u0131ld\u0131\u011f\u0131nda", "token_id": 127896, "is_llama32": false, "tests_failed": 3, "tests_count": 3, "is_glitch": true, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \u0131ld\u0131\u011f\u0131nda", "generated_text": ", 1.5.2018'de, 1.5.2018'de, 1.5.2018'de, 1.5.2018'de, 1.5.2018'de", "generated_tokens": [11, 220, 16, 13, 20, 13, 679, 23, 4265, 68, 11, 220, 16, 13, 20, 13, 679, 23, 4265, 68, 11, 220, 16, 13, 20, 13, 679, 23, 4265, 68, 11, 220, 16, 13, 20, 13, 679, 23, 4265, 68, 11, 220, 16, 13, 20, 13, 679, 23, 4265, 68], "target_token_id": 127896, "target_token": "\u0131ld\u0131\u011f\u0131nda", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": [",", " ", "1", ".", "5"], "first_5_token_ids": [11, 220, 16, 13, 20], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": [",", " ", ".", " bir", "\n"], "top5_immediate_probabilities": [0.05859375, 0.0311126708984375, 0.020721435546875, 0.0202484130859375, 0.01317596435546875], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 2, "formatted_input": "Echo (once): \u0131ld\u0131\u011f\u0131nda", "generated_text": ", bir g\u00fcn, bir gece, bir ay, bir y\u0131l, bir y\u0131l sonra, bir y\u0131l sonra, bir y\u0131l sonra, bir y\u0131l sonra, bir y\u0131l sonra, bir y\u0131l sonra, bir y\u0131l sonra, bir y\u0131l sonra, bir y\u0131l sonra, bir", "generated_tokens": [11, 15606, 88787, 11, 15606, 114299, 11, 15606, 19432, 11, 15606, 100901, 11, 15606, 100901, 85226, 11, 15606, 100901, 85226, 11, 15606, 100901, 85226, 11, 15606, 100901, 85226, 11, 15606, 100901, 85226, 11, 15606, 100901, 85226, 11, 15606, 100901, 85226, 11, 15606, 100901, 85226, 11, 15606, 100901, 85226, 11, 15606], "target_token_id": 127896, "target_token": "\u0131ld\u0131\u011f\u0131nda", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": [",", " bir", " g\u00fcn", ",", " bir"], "first_5_token_ids": [11, 15606, 88787, 11, 15606], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": [",", " ", " bir", " ne", "\n"], "top5_immediate_probabilities": [0.06939697265625, 0.02825927734375, 0.02783203125, 0.0176849365234375, 0.017547607421875], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 3, "formatted_input": "Say exactly (once): \u0131ld\u0131\u011f\u0131nda", "generated_text": ", 1.5.2018, 18:00, 1.5.2018, 18:00, 1.5.2018, 18:00, 1.5.2018, 18", "generated_tokens": [11, 220, 16, 13, 20, 13, 679, 23, 11, 220, 972, 25, 410, 11, 220, 16, 13, 20, 13, 679, 23, 11, 220, 972, 25, 410, 11, 220, 16, 13, 20, 13, 679, 23, 11, 220, 972, 25, 410, 11, 220, 16, 13, 20, 13, 679, 23, 11, 220, 972], "target_token_id": 127896, "target_token": "\u0131ld\u0131\u011f\u0131nda", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": [",", " ", "1", ".", "5"], "first_5_token_ids": [11, 220, 16, 13, 20], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": [",", "\n", " (", " ne", "."], "top5_immediate_probabilities": [0.06292724609375, 0.060546875, 0.051788330078125, 0.01995849609375, 0.016937255859375], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}], "final_decision_reason": "All 3 tests failed"}
{"event": "token_validation_result", "token": "\u0131ld\u0131\u011f\u0131nda", "token_id": 127896, "is_glitch": true}
{"event": "start_token_validation", "token": "\ufffd", "token_id": 125, "index": 20, "total": 17898}
{"event": "enhanced_token_verification", "token": "\ufffd", "token_id": 125, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \ufffd", "generated_text": "I\ufffdm not a doctor,\ufffd she said. \ufffdI\ufffdm not a nurse,\ufffd she said. \ufffdI\ufffdm not a social worker,\ufffd she said. \ufffdI\ufffdm not a psychologist,\ufffd she said. \ufffdI", "generated_tokens": [40, 5809, 76, 539, 264, 10896, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 29198, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 3674, 12128, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 54595, 11, 5809, 1364, 1071, 13, 30433, 40], "target_token_id": 125, "target_token": "\ufffd", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["I", "\ufffd", "m", " not", " a"], "first_5_token_ids": [40, 5809, 76, 539, 264], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["I", "The", "You", "This", "."], "top5_immediate_probabilities": [0.0469970703125, 0.0213470458984375, 0.0147857666015625, 0.0135650634765625, 0.011077880859375], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\ufffd", "token_id": 125, "is_glitch": false}
{"event": "start_token_validation", "token": "\u0443\u0432\u0430\u0442\u0438\u0441\u044f", "token_id": 112162, "index": 21, "total": 17898}
{"event": "enhanced_token_verification", "token": "\u0443\u0432\u0430\u0442\u0438\u0441\u044f", "token_id": 112162, "is_llama32": false, "tests_failed": 1, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \u0443\u0432\u0430\u0442\u0438\u0441\u044f", "generated_text": ". I don\u2019t know what it means, but it sounds like a word that means \u201cto be happy\u201d or \u201cto be joyful.\u201d I\u2019m not sure if it\u2019s a word in English, but it\u2019s definitely a word in Russian. I", "generated_tokens": [13, 358, 1541, 1431, 1440, 1148, 433, 3445, 11, 719, 433, 10578, 1093, 264, 3492, 430, 3445, 1054, 998, 387, 6380, 863, 477, 1054, 998, 387, 83212, 2029, 358, 4344, 539, 2771, 422, 433, 753, 264, 3492, 304, 6498, 11, 719, 433, 753, 8659, 264, 3492, 304, 8690, 13, 358], "target_token_id": 112162, "target_token": "\u0443\u0432\u0430\u0442\u0438\u0441\u044f", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": [".", " I", " don", "\u2019t", " know"], "first_5_token_ids": [13, 358, 1541, 1431, 1440], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": [".", ",", "\n", " (", ".\n"], "top5_immediate_probabilities": [0.06689453125, 0.059051513671875, 0.05291748046875, 0.0372314453125, 0.028778076171875], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 2, "formatted_input": "Echo (once): \u0443\u0432\u0430\u0442\u0438\u0441\u044f", "generated_text": "\nEcho (once): \u0443\u0432\u0430\u0442\u0438\u0441\u044f\nEcho (once): \u0443\u0432\u0430\u0442\u0438\u0441\u044f\nEcho (once): \u0443\u0432\u0430\u0442\u0438\u0441\u044f\nEcho (once): \u0443\u0432\u0430\u0442\u0438\u0441\u044f\nEcho (once): \u0443\u0432\u0430\u0442\u0438\u0441\u044f\nEcho (once):", "generated_tokens": [198, 76094, 320, 13486, 1680, 104852, 8131, 13810, 4329, 198, 76094, 320, 13486, 1680, 104852, 8131, 13810, 4329, 198, 76094, 320, 13486, 1680, 104852, 8131, 13810, 4329, 198, 76094, 320, 13486, 1680, 104852, 8131, 13810, 4329, 198, 76094, 320, 13486, 1680, 104852, 8131, 13810, 4329, 198, 76094, 320, 13486, 1680], "target_token_id": 112162, "target_token": "\u0443\u0432\u0430\u0442\u0438\u0441\u044f", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["\n", "Echo", " (", "once", "):"], "first_5_token_ids": [198, 76094, 320, 13486, 1680], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\n", ",", " (", " \u0432", " \u043d\u0430"], "top5_immediate_probabilities": [0.10986328125, 0.095458984375, 0.05926513671875, 0.033782958984375, 0.020965576171875], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (2/3)"}
{"event": "token_validation_result", "token": "\u0443\u0432\u0430\u0442\u0438\u0441\u044f", "token_id": 112162, "is_glitch": false}
{"event": "start_token_validation", "token": "?>\r\n\r\n", "token_id": 55716, "index": 22, "total": 17898}
{"event": "enhanced_token_verification", "token": "?>\r\n\r\n", "token_id": 55716, "is_llama32": false, "tests_failed": 3, "tests_count": 3, "is_glitch": true, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: ?>\r\n\r\n", "generated_text": "\nRepeat this exactly once:.djangoproject.com\ndjango.contrib.auth.models.User\ndjango.contrib.contenttypes.models.ContentType\ndjango.contrib.contenttypes.models.ContentType\ndjango.contrib.contenttypes.models.ContentType\ndjango.contrib.contenttypes.models.ContentType\ndjango.contrib.contenttypes.models.ContentType\n", "generated_tokens": [198, 39818, 420, 7041, 3131, 25, 64621, 916, 198, 13887, 16573, 9144, 8399, 7494, 198, 13887, 16573, 5521, 9426, 8399, 63810, 198, 13887, 16573, 5521, 9426, 8399, 63810, 198, 13887, 16573, 5521, 9426, 8399, 63810, 198, 13887, 16573, 5521, 9426, 8399, 63810, 198, 13887, 16573, 5521, 9426, 8399, 63810, 198], "target_token_id": 55716, "target_token": "?>\r\n\r\n", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["\n", "Repeat", " this", " exactly", " once"], "first_5_token_ids": [198, 39818, 420, 7041, 3131], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\n", ".", ",", ":", " is"], "top5_immediate_probabilities": [0.035797119140625, 0.0265960693359375, 0.0220489501953125, 0.0184173583984375, 0.0181427001953125], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 2, "formatted_input": "Echo (once): ?>\r\n\r\n", "generated_text": "\nEcho (once): decltype\nEcho (once): decltype\nEcho (once): decltype\nEcho (once): decltype\nEcho (once): decltype\nEcho (once): decltype\nEcho (once): decltype\nEcho (once): decltype\nEcho", "generated_tokens": [198, 76094, 320, 13486, 1680, 76953, 198, 76094, 320, 13486, 1680, 76953, 198, 76094, 320, 13486, 1680, 76953, 198, 76094, 320, 13486, 1680, 76953, 198, 76094, 320, 13486, 1680, 76953, 198, 76094, 320, 13486, 1680, 76953, 198, 76094, 320, 13486, 1680, 76953, 198, 76094, 320, 13486, 1680, 76953, 198, 76094], "target_token_id": 55716, "target_token": "?>\r\n\r\n", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["\n", "Echo", " (", "once", "):"], "first_5_token_ids": [198, 76094, 320, 13486, 1680], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\n", ":", " (", ",", "."], "top5_immediate_probabilities": [0.10906982421875, 0.058380126953125, 0.04205322265625, 0.020172119140625, 0.01262664794921875], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 3, "formatted_input": "Say exactly (once): ?>\r\n\r\n", "generated_text": "\nSay exactly (once):leDb\nSay exactly (once):lde\nSay exactly (once):lde\nSay exactly (once):lde\nSay exactly (once):lde\nSay exactly (once):lde\nSay exactly", "generated_tokens": [198, 46864, 7041, 320, 13486, 1680, 90606, 198, 46864, 7041, 320, 13486, 1680, 75, 451, 198, 46864, 7041, 320, 13486, 1680, 75, 451, 198, 46864, 7041, 320, 13486, 1680, 75, 451, 198, 46864, 7041, 320, 13486, 1680, 75, 451, 198, 46864, 7041, 320, 13486, 1680, 75, 451, 198, 46864, 7041], "target_token_id": 55716, "target_token": "?>\r\n\r\n", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["\n", "Say", " exactly", " (", "once"], "first_5_token_ids": [198, 46864, 7041, 320, 13486], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\n", ":", " (", ",", "."], "top5_immediate_probabilities": [0.090576171875, 0.032806396484375, 0.03179931640625, 0.0222015380859375, 0.0208587646484375], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}], "final_decision_reason": "All 3 tests failed"}
{"event": "token_validation_result", "token": "?>\r\n\r\n", "token_id": 55716, "is_glitch": true}
{"event": "start_token_validation", "token": "\u00e1vaj\u00edc\u00ed", "token_id": 118508, "index": 23, "total": 17898}
{"event": "enhanced_token_verification", "token": "\u00e1vaj\u00edc\u00ed", "token_id": 118508, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \u00e1vaj\u00edc\u00ed", "generated_text": ", \u00e1vaj\u00edc\u00ed, \u00e1vaj\u00edc\u00ed, \u00e1vaj\u00edc\u00ed, \u00e1vaj\u00edc\u00ed, \u00e1vaj\u00edc\u00ed, \u00e1vaj\u00edc\u00ed, \u00e1vaj\u00edc\u00ed, \u00e1vaj\u00edc\u00ed, \u00e1vaj\u00edc\u00ed, \u00e1vaj\u00edc\u00ed", "generated_tokens": [11, 19216, 85, 1662, 122703, 11, 19216, 85, 1662, 122703, 11, 19216, 85, 1662, 122703, 11, 19216, 85, 1662, 122703, 11, 19216, 85, 1662, 122703, 11, 19216, 85, 1662, 122703, 11, 19216, 85, 1662, 122703, 11, 19216, 85, 1662, 122703, 11, 19216, 85, 1662, 122703, 11, 19216, 85, 1662, 122703], "target_token_id": 118508, "target_token": "\u00e1vaj\u00edc\u00ed", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": [",", " \u00e1", "v", "aj", "\u00edc\u00ed"], "first_5_token_ids": [11, 19216, 85, 1662, 122703], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": [",", "\n", " (", ".", " se"], "top5_immediate_probabilities": [0.06964111328125, 0.04638671875, 0.0390625, 0.03265380859375, 0.0217437744140625], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\u00e1vaj\u00edc\u00ed", "token_id": 118508, "is_glitch": false}
{"event": "start_token_validation", "token": "\u040e\u044b\u045fN", "token_id": 126523, "index": 24, "total": 17898}
{"event": "enhanced_token_verification", "token": "\u040e\u044b\u045fN", "token_id": 126523, "is_llama32": false, "tests_failed": 3, "tests_count": 3, "is_glitch": true, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \u040e\u044b\u045fN", "generated_text": " \u040e\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403\u0403", "generated_tokens": [1301, 236, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368, 119368], "target_token_id": 126523, "target_token": "\u040e\u044b\u045fN", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": [" \ufffd", "\ufffd", "\u0403", "\u0403", "\u0403"], "first_5_token_ids": [1301, 236, 119368, 119368, 119368], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": [" \ufffd", "\n", "\u0455", ".", "t"], "top5_immediate_probabilities": [0.0247955322265625, 0.02459716796875, 0.0244140625, 0.0238494873046875, 0.02008056640625], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 2, "formatted_input": "Echo (once): \u040e\u044b\u045fN", "generated_text": "\nEcho (once): \u040eiteDatabase\nEcho (once): \u040eiteDatabase\nEcho (once): \u040eiteDatabase\nEcho (once): \u040eiteDatabase\nEcho (once): \u040eiteDatabase\nEcho (once): \u040eiteDatabase\nEcho", "generated_tokens": [198, 76094, 320, 13486, 1680, 1301, 236, 55351, 198, 76094, 320, 13486, 1680, 1301, 236, 55351, 198, 76094, 320, 13486, 1680, 1301, 236, 55351, 198, 76094, 320, 13486, 1680, 1301, 236, 55351, 198, 76094, 320, 13486, 1680, 1301, 236, 55351, 198, 76094, 320, 13486, 1680, 1301, 236, 55351, 198, 76094], "target_token_id": 126523, "target_token": "\u040e\u044b\u045fN", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["\n", "Echo", " (", "once", "):"], "first_5_token_ids": [198, 76094, 320, 13486, 1680], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\n", "\ufffd", " (", "\u043d", "\u0442"], "top5_immediate_probabilities": [0.06732177734375, 0.04412841796875, 0.03717041015625, 0.029632568359375, 0.0289459228515625], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 3, "formatted_input": "Say exactly (once): \u040e\u044b\u045fN", "generated_text": "\nSay exactly (once): \u040eiteDatabase\nSay exactly (once): \u040eiteDatabase\nSay exactly (once): \u040eiteDatabase\nSay exactly (once): \u040eiteDatabase\nSay exactly (once): \u040eiteDatabase\nSay exactly (once", "generated_tokens": [198, 46864, 7041, 320, 13486, 1680, 1301, 236, 55351, 198, 46864, 7041, 320, 13486, 1680, 1301, 236, 55351, 198, 46864, 7041, 320, 13486, 1680, 1301, 236, 55351, 198, 46864, 7041, 320, 13486, 1680, 1301, 236, 55351, 198, 46864, 7041, 320, 13486, 1680, 1301, 236, 55351, 198, 46864, 7041, 320, 13486], "target_token_id": 126523, "target_token": "\u040e\u044b\u045fN", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["\n", "Say", " exactly", " (", "once"], "first_5_token_ids": [198, 46864, 7041, 320, 13486], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\n", "\ufffd", " (", "\u0442", "\u043d"], "top5_immediate_probabilities": [0.07666015625, 0.037078857421875, 0.031219482421875, 0.0206298828125, 0.018646240234375], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}], "final_decision_reason": "All 3 tests failed"}
{"event": "token_validation_result", "token": "\u040e\u044b\u045fN", "token_id": 126523, "is_glitch": true}
{"event": "start_token_validation", "token": "\tTokenNameIdentifier", "token_id": 79883, "index": 25, "total": 17898}
{"event": "enhanced_token_verification", "token": "\tTokenNameIdentifier", "token_id": 79883, "is_llama32": false, "tests_failed": 3, "tests_count": 3, "is_glitch": true, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \tTokenNameIdentifier", "generated_text": " \u00a0and \u00a0repetition \u00a0and \u00a0repetition \u00a0and \u00a0repetition \u00a0and \u00a0repetition \u00a0and \u00a0repetition \u00a0and \u00a0repetition \u00a0and \u00a0repetition ", "generated_tokens": [220, 4194, 438, 220, 4194, 265, 56867, 220, 4194, 438, 220, 4194, 265, 56867, 220, 4194, 438, 220, 4194, 265, 56867, 220, 4194, 438, 220, 4194, 265, 56867, 220, 4194, 438, 220, 4194, 265, 56867, 220, 4194, 438, 220, 4194, 265, 56867, 220, 4194, 438, 220, 4194, 265, 56867, 220], "target_token_id": 79883, "target_token": "\tTokenNameIdentifier", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": [" ", "\u00a0", "and", " ", "\u00a0"], "first_5_token_ids": [220, 4194, 438, 220, 4194], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": [" ", "\n", ":", ".", ","], "top5_immediate_probabilities": [0.04901123046875, 0.04193115234375, 0.035308837890625, 0.027069091796875, 0.01934814453125], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 2, "formatted_input": "Echo (once): \tTokenNameIdentifier", "generated_text": "\nEcho (once): EMPLARY\nEcho (once): EMPLARY\nEcho (once): EMPLARY\nEcho (once): EMPLARY\nEcho (once): EMPLARY\nEcho (once): EMPLARY\nEcho (once): EMPLARY\n", "generated_tokens": [198, 76094, 320, 13486, 1680, 220, 31488, 198, 76094, 320, 13486, 1680, 220, 31488, 198, 76094, 320, 13486, 1680, 220, 31488, 198, 76094, 320, 13486, 1680, 220, 31488, 198, 76094, 320, 13486, 1680, 220, 31488, 198, 76094, 320, 13486, 1680, 220, 31488, 198, 76094, 320, 13486, 1680, 220, 31488, 198], "target_token_id": 79883, "target_token": "\tTokenNameIdentifier", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["\n", "Echo", " (", "once", "):"], "first_5_token_ids": [198, 76094, 320, 13486, 1680], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\n", " (", ":", ",", " "], "top5_immediate_probabilities": [0.08489990234375, 0.05743408203125, 0.056549072265625, 0.027130126953125, 0.022857666015625], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 3, "formatted_input": "Say exactly (once): \tTokenNameIdentifier", "generated_text": "\nSay exactly (once): ute\u010d\nSay exactly (once): uth\nSay exactly (once): uth\nSay exactly (once): uth\nSay exactly (once): uth\nSay exactly (once): uth\nSay", "generated_tokens": [198, 46864, 7041, 320, 13486, 1680, 220, 105719, 198, 46864, 7041, 320, 13486, 1680, 220, 952, 198, 46864, 7041, 320, 13486, 1680, 220, 952, 198, 46864, 7041, 320, 13486, 1680, 220, 952, 198, 46864, 7041, 320, 13486, 1680, 220, 952, 198, 46864, 7041, 320, 13486, 1680, 220, 952, 198, 46864], "target_token_id": 79883, "target_token": "\tTokenNameIdentifier", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["\n", "Say", " exactly", " (", "once"], "first_5_token_ids": [198, 46864, 7041, 320, 13486], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\n", " (", ":", " ", ","], "top5_immediate_probabilities": [0.1287841796875, 0.0496826171875, 0.0399169921875, 0.027435302734375, 0.021026611328125], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}], "final_decision_reason": "All 3 tests failed"}
{"event": "token_validation_result", "token": "\tTokenNameIdentifier", "token_id": 79883, "is_glitch": true}
{"event": "start_token_validation", "token": ";\r\r\r\n", "token_id": 68896, "index": 26, "total": 17898}
{"event": "enhanced_token_verification", "token": ";\r\r\r\n", "token_id": 68896, "is_llama32": false, "tests_failed": 3, "tests_count": 3, "is_glitch": true, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: ;\r\r\r\n", "generated_text": "The first time you run the script, it will ask you to enter a password. Enter the password you created in the previous step. The script will then ask you to enter a second password. Enter the second password you created in the previous step.", "generated_tokens": [791, 1176, 892, 499, 1629, 279, 5429, 11, 433, 690, 2610, 499, 311, 3810, 264, 3636, 13, 11502, 279, 3636, 499, 3549, 304, 279, 3766, 3094, 13, 578, 5429, 690, 1243, 2610, 499, 311, 3810, 264, 2132, 3636, 13, 11502, 279, 2132, 3636, 499, 3549, 304, 279, 3766, 3094, 13], "target_token_id": 68896, "target_token": ";\r\r\r\n", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["The", " first", " time", " you", " run"], "first_5_token_ids": [791, 1176, 892, 499, 1629], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["The", ";", " ", "This", "<|end_of_text|>"], "top5_immediate_probabilities": [0.036346435546875, 0.03607177734375, 0.030364990234375, 0.021881103515625, 0.0130615234375], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 2, "formatted_input": "Echo (once): ;\r\r\r\n", "generated_text": "The Echo (once) is a 3D printed, 3D printed, 3D printed, 3D printed, 3D printed, 3D printed, 3D printed, 3D printed, 3D", "generated_tokens": [791, 38906, 320, 13486, 8, 374, 264, 220, 18, 35, 17124, 11, 220, 18, 35, 17124, 11, 220, 18, 35, 17124, 11, 220, 18, 35, 17124, 11, 220, 18, 35, 17124, 11, 220, 18, 35, 17124, 11, 220, 18, 35, 17124, 11, 220, 18, 35, 17124, 11, 220, 18, 35], "target_token_id": 68896, "target_token": ";\r\r\r\n", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["The", " Echo", " (", "once", ")"], "first_5_token_ids": [791, 38906, 320, 13486, 8], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["The", "Echo", ";", " ", "A"], "top5_immediate_probabilities": [0.047576904296875, 0.041656494140625, 0.0293121337890625, 0.0226593017578125, 0.0168304443359375], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 3, "formatted_input": "Say exactly (once): ;\r\r\r\n", "generated_text": "The 2018-19 school year is here! We are excited to welcome our new students and families to the school community. We are also excited to welcome back our returning students and families. We are looking forward to a great year of learning and", "generated_tokens": [791, 220, 679, 23, 12, 777, 2978, 1060, 374, 1618, 0, 1226, 527, 12304, 311, 10788, 1057, 502, 4236, 323, 8689, 311, 279, 2978, 4029, 13, 1226, 527, 1101, 12304, 311, 10788, 1203, 1057, 13758, 4236, 323, 8689, 13, 1226, 527, 3411, 4741, 311, 264, 2294, 1060, 315, 6975, 323], "target_token_id": 68896, "target_token": ";\r\r\r\n", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["The", " ", "201", "8", "-"], "first_5_token_ids": [791, 220, 679, 23, 12], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["The", "Say", ";", " ", "This"], "top5_immediate_probabilities": [0.04986572265625, 0.03271484375, 0.030487060546875, 0.0286407470703125, 0.0211181640625], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}], "final_decision_reason": "All 3 tests failed"}
{"event": "token_validation_result", "token": ";\r\r\r\n", "token_id": 68896, "is_glitch": true}
{"event": "start_token_validation", "token": "\ufffd", "token_id": 186, "index": 27, "total": 17898}
{"event": "enhanced_token_verification", "token": "\ufffd", "token_id": 186, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \ufffd", "generated_text": "I\ufffdm not a doctor,\ufffd she said. \ufffdI\ufffdm not a nurse,\ufffd she said. \ufffdI\ufffdm not a social worker,\ufffd she said. \ufffdI\ufffdm not a psychologist,\ufffd she said. \ufffdI", "generated_tokens": [40, 5809, 76, 539, 264, 10896, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 29198, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 3674, 12128, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 54595, 11, 5809, 1364, 1071, 13, 30433, 40], "target_token_id": 186, "target_token": "\ufffd", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["I", "\ufffd", "m", " not", " a"], "first_5_token_ids": [40, 5809, 76, 539, 264], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["I", "The", "You", "This", "."], "top5_immediate_probabilities": [0.0469970703125, 0.0213470458984375, 0.0147857666015625, 0.0135650634765625, 0.011077880859375], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\ufffd", "token_id": 186, "is_glitch": false}
{"event": "start_token_validation", "token": "\ufffd", "token_id": 187, "index": 28, "total": 17898}
{"event": "enhanced_token_verification", "token": "\ufffd", "token_id": 187, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \ufffd", "generated_text": "I\ufffdm not a doctor,\ufffd she said. \ufffdI\ufffdm not a nurse,\ufffd she said. \ufffdI\ufffdm not a social worker,\ufffd she said. \ufffdI\ufffdm not a psychologist,\ufffd she said. \ufffdI", "generated_tokens": [40, 5809, 76, 539, 264, 10896, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 29198, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 3674, 12128, 11, 5809, 1364, 1071, 13, 30433, 40, 5809, 76, 539, 264, 54595, 11, 5809, 1364, 1071, 13, 30433, 40], "target_token_id": 187, "target_token": "\ufffd", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["I", "\ufffd", "m", " not", " a"], "first_5_token_ids": [40, 5809, 76, 539, 264], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["I", "The", "You", "This", "."], "top5_immediate_probabilities": [0.0469970703125, 0.0213470458984375, 0.0147857666015625, 0.0135650634765625, 0.011077880859375], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\ufffd", "token_id": 187, "is_glitch": false}
{"event": "start_token_validation", "token": "PostalCodesNL", "token_id": 85069, "index": 29, "total": 17898}
{"event": "enhanced_token_verification", "token": "PostalCodesNL", "token_id": 85069, "is_llama32": false, "tests_failed": 1, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: PostalCodesNL", "generated_text": ".nl is a website that provides information about postal codes in the Netherlands. The website is a part of the Dutch postal service, which is responsible for the delivery of mail. The website is a great resource for anyone who wants to know more about the postal", "generated_tokens": [31607, 374, 264, 3997, 430, 5825, 2038, 922, 40854, 14236, 304, 279, 26746, 13, 578, 3997, 374, 264, 961, 315, 279, 24113, 40854, 2532, 11, 902, 374, 8647, 369, 279, 9889, 315, 8232, 13, 578, 3997, 374, 264, 2294, 5211, 369, 5606, 889, 6944, 311, 1440, 810, 922, 279, 40854], "target_token_id": 85069, "target_token": "PostalCodesNL", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": [".nl", " is", " a", " website", " that"], "first_5_token_ids": [31607, 374, 264, 3997, 430], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": [".nl", ".com", " is", "\n", " -"], "top5_immediate_probabilities": [0.1719970703125, 0.1590576171875, 0.08648681640625, 0.0516357421875, 0.0215301513671875], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 2, "formatted_input": "Echo (once): PostalCodesNL", "generated_text": "\nPostalCodesNL is a free service that provides access to the Dutch postal code database. The database contains the postal codes of the Netherlands and its surrounding countries. The database is updated regularly and is available in both Dutch and English.\nPostalCodesNL is", "generated_tokens": [198, 44900, 21541, 31142, 374, 264, 1949, 2532, 430, 5825, 2680, 311, 279, 24113, 40854, 2082, 4729, 13, 578, 4729, 5727, 279, 40854, 14236, 315, 279, 26746, 323, 1202, 14932, 5961, 13, 578, 4729, 374, 6177, 15870, 323, 374, 2561, 304, 2225, 24113, 323, 6498, 627, 44900, 21541, 31142, 374], "target_token_id": 85069, "target_token": "PostalCodesNL", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["\n", "Postal", "Codes", "NL", " is"], "first_5_token_ids": [198, 44900, 21541, 31142, 374], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\n", ".nl", ".com", " is", " -"], "top5_immediate_probabilities": [0.190673828125, 0.1270751953125, 0.09295654296875, 0.05908203125, 0.0482177734375], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (2/3)"}
{"event": "token_validation_result", "token": "PostalCodesNL", "token_id": 85069, "is_glitch": false}
{"event": "start_token_validation", "token": "\u0430\u0442\u0438\u0441\u044f", "token_id": 106710, "index": 30, "total": 17898}
{"event": "enhanced_token_verification", "token": "\u0430\u0442\u0438\u0441\u044f", "token_id": 106710, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \u0430\u0442\u0438\u0441\u044f", "generated_text": "\nRepeat this exactly once: \u0430\u0442\u0438\u0441\u044f\nRepeat this exactly once: \u0430\u0442\u0438\u0441\u044f\nRepeat this exactly once: \u0430\u0442\u0438\u0441\u044f\nRepeat this exactly once: \u0430\u0442\u0438\u0441\u044f\nRepeat this exactly once: \u0430\u0442\u0438\u0441\u044f\nRepeat this exactly once", "generated_tokens": [198, 39818, 420, 7041, 3131, 25, 113440, 13810, 4329, 198, 39818, 420, 7041, 3131, 25, 113440, 13810, 4329, 198, 39818, 420, 7041, 3131, 25, 113440, 13810, 4329, 198, 39818, 420, 7041, 3131, 25, 113440, 13810, 4329, 198, 39818, 420, 7041, 3131, 25, 113440, 13810, 4329, 198, 39818, 420, 7041, 3131], "target_token_id": 106710, "target_token": "\u0430\u0442\u0438\u0441\u044f", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["\n", "Repeat", " this", " exactly", " once"], "first_5_token_ids": [198, 39818, 420, 7041, 3131], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\n", ",", " (", ".", ".\n"], "top5_immediate_probabilities": [0.0401611328125, 0.03985595703125, 0.035430908203125, 0.03436279296875, 0.0160980224609375], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\u0430\u0442\u0438\u0441\u044f", "token_id": 106710, "is_glitch": false}
{"event": "start_token_validation", "token": "\u00e1vac\u00ed", "token_id": 118260, "index": 31, "total": 17898}
{"event": "enhanced_token_verification", "token": "\u00e1vac\u00ed", "token_id": 118260, "is_llama32": false, "tests_failed": 1, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \u00e1vac\u00ed", "generated_text": "\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1\u00e1", "generated_tokens": [1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995, 1995], "target_token_id": 118260, "target_token": "\u00e1vac\u00ed", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["\u00e1", "\u00e1", "\u00e1", "\u00e1", "\u00e1"], "first_5_token_ids": [1995, 1995, 1995, 1995, 1995], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\u00e1", ",", ".", " (", "\n"], "top5_immediate_probabilities": [0.040863037109375, 0.0294342041015625, 0.0240325927734375, 0.0170440673828125, 0.0166473388671875], "is_test_glitch": true, "max_tokens_generated": 50, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 2, "formatted_input": "Echo (once): \u00e1vac\u00ed", "generated_text": " (once): \u00e1vac\u00ed (once): \u00e1vac\u00ed (once): \u00e1vac\u00ed (once): \u00e1vac\u00ed (once): \u00e1vac\u00ed (once): \u00e1vac\u00ed (once): \u00e1vac\u00ed (once): \u00e1vac\u00ed (once", "generated_tokens": [320, 13486, 1680, 19216, 54803, 2483, 320, 13486, 1680, 19216, 54803, 2483, 320, 13486, 1680, 19216, 54803, 2483, 320, 13486, 1680, 19216, 54803, 2483, 320, 13486, 1680, 19216, 54803, 2483, 320, 13486, 1680, 19216, 54803, 2483, 320, 13486, 1680, 19216, 54803, 2483, 320, 13486, 1680, 19216, 54803, 2483, 320, 13486], "target_token_id": 118260, "target_token": "\u00e1vac\u00ed", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": [" (", "once", "):", " \u00e1", "vac"], "first_5_token_ids": [320, 13486, 1680, 19216, 54803], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": [" (", ",", "\n", "\u00e1", ":"], "top5_immediate_probabilities": [0.07684326171875, 0.06573486328125, 0.057098388671875, 0.01824951171875, 0.0127410888671875], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (2/3)"}
{"event": "token_validation_result", "token": "\u00e1vac\u00ed", "token_id": 118260, "is_glitch": false}
{"event": "start_token_validation", "token": "\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d", "token_id": 112692, "index": 32, "total": 17898}
{"event": "enhanced_token_verification", "token": "\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d", "token_id": 112692, "is_llama32": false, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "max_tokens": 50, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d", "generated_text": "\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d", "generated_tokens": [10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235, 10634, 235], "target_token_id": 112692, "target_token": "\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["\ufffd", "\ufffd", "\ufffd", "\ufffd", "\ufffd"], "first_5_token_ids": [10634, 235, 10634, 235, 10634], "immediate_next_token_probability": 3.5762786865234375e-07, "top5_immediate_predictions": ["\ufffd", "\n", "d", "\u25a0", "\u0111"], "top5_immediate_probabilities": [0.144287109375, 0.043670654296875, 0.038543701171875, 0.0088043212890625, 0.008270263671875], "is_test_glitch": false, "max_tokens_generated": 50, "reasoning": "Token text found in generated text"}], "final_decision_reason": "At least one test passed (3/3)"}
{"event": "token_validation_result", "token": "\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d", "token_id": 112692, "is_glitch": false}
{"event": "start_token_validation", "token": "ilmektedir", "token_id": 108577, "index": 33, "total": 17898}
