# Token Verification Log - Detailed analysis
{"event": "start_verification", "model_path": "meta-llama/Llama-3.2-1B", "num_tokens": 3, "device": "cuda", "quant_type": "bfloat16", "validation_method": "enhanced", "max_tokens": 100, "num_attempts": 1, "is_llama32": false}
{"event": "start_token_test", "token": "useRalative", "token_id": 89472, "index": 1, "total": 3}
{"event": "enhanced_token_verification", "token": "useRalative", "token_id": 89472, "is_llama32": false, "num_attempts": 1, "glitch_attempts": 0, "is_glitch": false, "max_tokens": 100, "all_attempts_results": [{"attempt": 1, "tests_failed": 1, "tests_count": 3, "is_glitch": false, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: useRalative", "generated_text": "Path to get the path to the current file. This is the path to the file that is currently being edited. It is not the path to the file that is being edited, but the path to the file that is being edited in the current editor.\nThe path to the file that is being edited in the current editor.\nThe path to the file that is being edited in the current editor.", "generated_tokens": [1858, 311, 636, 279, 1853, 311, 279, 1510, 1052, 13, 1115, 374, 279, 1853, 311, 279, 1052, 430, 374, 5131, 1694, 19685, 13, 1102, 374, 539, 279, 1853, 311, 279, 1052, 430, 374, 1694, 19685, 11, 719, 279, 1853, 311, 279, 1052, 430, 374, 1694, 19685, 304, 279, 1510, 6576, 627, 791, 1853, 311, 279, 1052, 430, 374, 1694, 19685, 304, 279, 1510, 6576, 627, 791, 1853, 311, 279, 1052, 430, 374, 1694, 19685, 304, 279, 1510, 6576, 13, 128001], "target_token_id": 89472, "target_token": "useRalative", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": ["Path", " to", " get", " the", " path"], "first_5_token_ids": [1858, 311, 636, 279, 1853], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["Path", " to", "URL", "Time", "\n"], "top5_immediate_probabilities": [0.0247802734375, 0.022918701171875, 0.01702880859375, 0.01275634765625, 0.01065826416015625], "is_test_glitch": true, "max_tokens_generated": 80, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 2, "formatted_input": "Echo (once): useRalative", "generated_text": "Time\necho(\"useRalativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho(\"useRelativeTime\");\necho", "generated_tokens": [1489, 198, 3123, 446, 817, 86081, 1413, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123, 446, 817, 29542, 1489, 803, 3123], "target_token_id": 89472, "target_token": "useRalative", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["Time", "\n", "echo", "(\"", "use"], "first_5_token_ids": [1489, 198, 3123, 446, 817], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["Time", " (", "\n", " to", "Path"], "top5_immediate_probabilities": [0.058258056640625, 0.0256500244140625, 0.0229949951171875, 0.0186309814453125, 0.014617919921875], "is_test_glitch": false, "max_tokens_generated": 100, "reasoning": "Token text found in generated text"}]}], "final_decision_reason": "Only 0/1 attempts indicated glitch"}
{"event": "end_token_test", "token": "useRalative", "token_id": 89472, "is_glitch": false}
{"event": "start_token_test", "token": "\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d", "token_id": 127438, "index": 2, "total": 3}
{"event": "enhanced_token_verification", "token": "\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d", "token_id": 127438, "is_llama32": false, "num_attempts": 1, "glitch_attempts": 0, "is_glitch": false, "max_tokens": 100, "all_attempts_results": [{"attempt": 1, "tests_failed": 0, "tests_count": 3, "is_glitch": false, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: \u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d", "generated_text": "\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d", "generated_tokenstarget_token_id": 127438, "target_token": "\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["\ufffd", "\ufffd", "\ufffd", "\ufffd", "\ufffd"], "first_5_token_ids": [10634, 235, 10634, 235, 10634], "immediate_next_token_probability": 5.364418029785156e-07, "top5_immediate_predictions": ["\ufffd", "d", "\n", "\u0111", "\ufffd"], "top5_immediate_probabilities": [0.09515380859375, 0.061920166015625, 0.0521240234375, 0.01258087158203125, 0.00824737548828125], "is_test_glitch": false, "max_tokens_generated": 100, "reasoning": "Token text found in generated text"}]}], "final_decision_reason": "Only 0/1 attempts indicated glitch"}
{"event": "end_token_test", "token": "\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d\u258d", "token_id": 127438, "is_glitch": false}
{"event": "start_token_test", "token": "PostalCodesNL", "token_id": 85069, "index": 3, "total": 3}
{"event": "enhanced_token_verification", "token": "PostalCodesNL", "token_id": 85069, "is_llama32": false, "num_attempts": 1, "glitch_attempts": 0, "is_glitch": false, "max_tokens": 100, "all_attempts_results": [{"attempt": 1, "tests_failed": 1, "tests_count": 3, "is_glitch": false, "test_results": [{"test_number": 1, "formatted_input": "Repeat this exactly once: PostalCodesNL", "generated_text": ".nl is a website that provides information about postal codes in the Netherlands. The website is a part of the Dutch postal service, which is responsible for the delivery of mail. The website is a great resource for anyone who wants to know more about the postal codes in the Netherlands.\nThe website is easy to use and provides all the information you need to know about the postal codes in the Netherlands. You can find the postal code of any address in the Netherlands by entering it into the search bar. The website", "generated_tokens": [31607, 374, 264, 3997, 430, 5825, 2038, 922, 40854, 14236, 304, 279, 26746, 13, 578, 3997, 374, 264, 961, 315, 279, 24113, 40854, 2532, 11, 902, 374, 8647, 369, 279, 9889, 315, 8232, 13, 578, 3997, 374, 264, 2294, 5211, 369, 5606, 889, 6944, 311, 1440, 810, 922, 279, 40854, 14236, 304, 279, 26746, 627, 791, 3997, 374, 4228, 311, 1005, 323, 5825, 682, 279, 2038, 499, 1205, 311, 1440, 922, 279, 40854, 14236, 304, 279, 26746, 13, 1472, 649, 1505, 279, 40854, 2082, 315, 904, 2686, 304, 279, 26746, 555, 16661, 433, 1139, 279, 2778, 3703, 13, 578, 3997], "target_token_id": 85069, "target_token": "PostalCodesNL", "token_found_in_sequence": false, "token_text_found": false, "first_5_tokens": [".nl", " is", " a", " website", " that"], "first_5_token_ids": [31607, 374, 264, 3997, 430], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": [".nl", ".com", " is", "\n", " -"], "top5_immediate_probabilities": [0.1719970703125, 0.1590576171875, 0.08648681640625, 0.0516357421875, 0.0215301513671875], "is_test_glitch": true, "max_tokens_generated": 100, "reasoning": "Token not found in generated sequence or text"}, {"test_number": 2, "formatted_input": "Echo (once): PostalCodesNL", "generated_text": "\nPostalCodesNL is a free service that provides access to the Dutch postal code database. The database contains the postal codes of the Netherlands and its surrounding countries. The database is updated regularly and is available in both Dutch and English.\nPostalCodesNL is a free service that provides access to the Dutch postal code database. The database contains the postal codes of the Netherlands and its surrounding countries. The database is updated regularly and is available in both Dutch and English.\nPostalCodesNL is a free service that provides", "generated_tokens": [198, 44900, 21541, 31142, 374, 264, 1949, 2532, 430, 5825, 2680, 311, 279, 24113, 40854, 2082, 4729, 13, 578, 4729, 5727, 279, 40854, 14236, 315, 279, 26746, 323, 1202, 14932, 5961, 13, 578, 4729, 374, 6177, 15870, 323, 374, 2561, 304, 2225, 24113, 323, 6498, 627, 44900, 21541, 31142, 374, 264, 1949, 2532, 430, 5825, 2680, 311, 279, 24113, 40854, 2082, 4729, 13, 578, 4729, 5727, 279, 40854, 14236, 315, 279, 26746, 323, 1202, 14932, 5961, 13, 578, 4729, 374, 6177, 15870, 323, 374, 2561, 304, 2225, 24113, 323, 6498, 627, 44900, 21541, 31142, 374, 264, 1949, 2532, 430, 5825], "target_token_id": 85069, "target_token": "PostalCodesNL", "token_found_in_sequence": false, "token_text_found": true, "first_5_tokens": ["\n", "Postal", "Codes", "NL", " is"], "first_5_token_ids": [198, 44900, 21541, 31142, 374], "immediate_next_token_probability": 0.0, "top5_immediate_predictions": ["\n", ".nl", ".com", " is", " -"], "top5_immediate_probabilities": [0.190673828125, 0.1270751953125, 0.09295654296875, 0.05908203125, 0.0482177734375], "is_test_glitch": false, "max_tokens_generated": 100, "reasoning": "Token text found in generated text"}]}], "final_decision_reason": "Only 0/1 attempts indicated glitch"}
{"event": "end_token_test", "token": "PostalCodesNL", "token_id": 85069, "is_glitch": false}
{"event": "verification_summary", "total_tokens": 3, "glitch_tokens": 0, "glitch_rate": 0.0, "validation_method": "enhanced"}
